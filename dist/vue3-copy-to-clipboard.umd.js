(function(t,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("vue"),require("copy-to-clipboard")):typeof define=="function"&&define.amd?define(["exports","vue","copy-to-clipboard"],e):(t=typeof globalThis<"u"?globalThis:t||self,e(t["vue3-copy-to-clipboard"]={},t.Vue,t.copy))})(this,function(t,e,a){"use strict";const s=(o=>o&&typeof o=="object"&&"default"in o?o:{default:o})(a);function c(){return{copyToClipboard:n=>{try{s.default(n)}catch{throw new Error("Unable to copy")}}}}const p=e.defineComponent({__name:"CopyToClipboard",props:{as:{default:"button"},copy:null},emits:["success","error"],setup(o,{emit:n}){const l=o;e.defineComponent({name:"CopyToClipboard"});const f=()=>{const{copyToClipboard:r}=c();try{r(l.copy),n("success")}catch(d){n("error",d)}};return(r,d)=>(e.openBlock(),e.createBlock(e.resolveDynamicComponent(o.as),{onClick:e.withModifiers(f,["prevent"])},{default:e.withCtx(()=>[e.renderSlot(r.$slots,"default")]),_:3},8,["onClick"]))}}),{copyToClipboard:i}=c(),u={install(o){o.config.globalProperties.$copyToClipboard=i,o.component("CopyToClipboard",p)}};function y(o){return i(o)}t.$copyToClipboard=y,t.CopyToClipboard=p,t.default=u,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
