(function(t,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("vue"),require("copy-to-clipboard")):typeof define=="function"&&define.amd?define(["exports","vue","copy-to-clipboard"],e):(t=typeof globalThis<"u"?globalThis:t||self,e(t["vue3-copy-to-clipboard"]={},t.Vue,t.copy))})(this,function(t,e,a){"use strict";const s=(o=>o&&typeof o=="object"&&"default"in o?o:{default:o})(a);function c(){return{copyToClipboard:r=>{try{s.default(r)}catch{throw new Error("Unable to copy")}}}}const i=e.defineComponent({__name:"CopyToClipboard",props:{as:{required:!1,type:String,default:"button"},copy:{required:!0,type:String}},emits:["success","error"],setup(o,{emit:r}){const d=o;e.defineComponent({name:"CopyToClipboard"});const f=()=>{const{copyToClipboard:n}=c();try{n(d.copy),r("success")}catch(l){r("error",l)}};return(n,l)=>(e.openBlock(),e.createBlock(e.resolveDynamicComponent(o.as),{onClick:e.withModifiers(f,["prevent"])},{default:e.withCtx(()=>[e.renderSlot(n.$slots,"default")]),_:3},8,["onClick"]))}}),{copyToClipboard:p}=c(),u={install(o){o.config.globalProperties.$copyToClipboard=p,o.component("CopyToClipboard",i)}};function y(o){return p(o)}t.$copyToClipboard=y,t.CopyToClipboard=i,t.default=u,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
